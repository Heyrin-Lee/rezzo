<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.rezzo.mes.resour.insp.mapper.InspMapper">
    <select id="getRscVendList" parameterType="VendVO" resultType="VendVO">
        select VEND_CD, VEND_NM, BIZNO, TELNO
        from VEND
        where VEND_NM like '%${vendNm}%'
          and VEND_CD like '%${vendCd}%'
    </select>

    <select id="getResources" resultType="RscVO">
        select RSC_CD, RSC_NM, MNG_UNIT
        from RSC
        where RSC_NM like '%${rscNm}%'
          and RSC_CD like '%${rscCd}%'
    </select>

    <select id="getRscOrdrList" parameterType="RscOrdrVO" resultType="RscOrdrVO">
        select rod.RSC_CD, rsc.RSC_NM, rod.ORDR_CD, rod.ORDR_CNT, rod.RMN_CNT, vend.VEND_NM, rsc.MNG_UNIT, rsc.RSC_SPEC
        from RSC_ORDR ro,
        RSC_ORDR_DTL rod,
        VEND,
        RSC
        where ro.ORDR_CD = rod.ORDR_CD
        and rod.RSC_CD = rsc.RSC_CD
        and rod.RMN_CNT != 0
        and ro.VEND_CD = vend.VEND_CD
        <if test="vendCd != ''">and ro.VEND_CD = #{vendCd}</if>
        <![CDATA[
          and rod.PAPRD_CMND_DT >= #{startDt}
          and rod.PAPRD_CMND_DT <= #{endDt}
        ]]>
        order by PAPRD_CMND_DT
    </select>

    <select id="genRscInspCd" resultType="String">
        select 'RMI' || to_char(sysdate, 'YYYYMMDD') || lpad(NVL(max(substr(rsc_insp_cd, 12, 3)), 0) + 1, 3, '0')
        from rsc_insp_dtl
        where substr(rsc_insp_cd, 4, 8) = to_char(sysdate, 'yyyymmdd')
    </select>

    <select id="genRscNoOrdrCd" resultType="String">
        select 'NOR' || to_char(sysdate, 'YYYYMMDD') || lpad(NVL(max(substr(ORDR_CD, 12, 3)), 0) + 1, 3, '0')
        from rsc_insp_dtl
        where 'NOR' = substr(ORDR_CD, 0, 3)
          and substr(ORDR_CD, 4, 8) = to_char(sysdate, 'yyyymmdd')
    </select>

    <insert id="setRscInsp" parameterType="RscInspVO">
        merge into RSC_INSP
        using dual
        on (RSC_INSP_CD = #{rscInspCd})
        when matched then
            update
            set INSP_DT   = #{inspDt},
                INSP_TSTR = #{inspTstr}
        when not matched then
            insert (RSC_INSP_CD, INSP_DT, INSP_TSTR)
            values (#{rscInspCd}, #{inspDt}, #{inspTstr})
    </insert>

    <insert id="setRscInspList" parameterType="RscInspVO">
        insert into RSC_INSP_DTL (RSC_CD, RSC_INSP_CD, ORDR_CD, INSP_CNT, INSP_PASS_CNT, PASS_RMN_CNT,
                                  INSP_FAIL_CNT, PRE_IST_CNT)
        values (#{rscCd}, #{rscInspCd}, #{ordrCd}, #{inspCnt}, to_number(#{inspPassCnt}), to_number(#{inspPassCnt}),
                to_number(#{inspFailCnt}),
                #{preIstCnt})
    </insert>

    <insert id="setRscInfList">
        merge into RSC_INFER
        using dual
        on (RSC_CD = #{insp.rscCd} and RSC_INSP_CD = #{insp.rscInspCd}
            and ORDR_CD = #{insp.ordrCd} and CCD_DTL = #{inf.ccdDtl})
        when matched then
            update
            set INF_CNT = #{inf.infCnt}
        when not matched then
            insert (CCD_DTL, RSC_CD, RSC_INSP_CD, INF_CNT, ORDR_CD)
            values (#{inf.ccdDtl}, #{insp.rscCd}, #{insp.rscInspCd}, to_number(#{inf.infCnt}), #{insp.ordrCd})
    </insert>

    <update id="updRscOrdrRmnCnt" parameterType="RscInspVO">
        update RSC_ORDR_DTL
        set RMN_CNT = RMN_CNT - #{preIstCnt}
        where ORDR_CD = #{ordrCd}
          and RSC_CD = #{rscCd}
    </update>

    <select id="schRscInspHist" parameterType="RscInspVO" resultType="RscInspVO">
        select ri.INSP_DT, count(*) inspCnt, ri.RSC_INSP_CD
        from RSC_INSP ri,
             RSC_INSP_DTL rid
        where ri.RSC_INSP_CD = rid.RSC_INSP_CD
        group by INSP_DT, ri.RSC_INSP_CD
        order by RSC_INSP_CD desc
    </select>

    <select id="getRscInspHistByCd" parameterType="RscInspVO" resultType="RscInspVO">
        select rid.RSC_CD,
               rsc.RSC_NM,
               rsc.RSC_SPEC,
               rsc.MNG_UNIT,
               vend.VEND_NM,
               rid.ORDR_CD,
               rod.ORDR_CNT,
               rod.RMN_CNT,
               rid.PRE_IST_CNT,
               rid.INSP_CNT,
               rid.INSP_PASS_CNT,
               rid.INSP_FAIL_CNT,
               rid.RSC_INSP_CD
        from RSC_INSP_DTL rid,
             RSC_ORDR_DTL rod,
             RSC_ORDR ro,
             VEND,
             RSC
        where rid.ORDR_CD = rod.ORDR_CD
          and rid.RSC_CD = rod.RSC_CD
          and rsc.RSC_CD = rid.RSC_CD
          and ro.ORDR_CD = rid.ORDR_CD
          and vend.VEND_CD = ro.VEND_CD
          and rid.RSC_INSP_CD = #{rscInspCd}


        union

        select rid.RSC_CD,
               rsc.RSC_NM,
               rsc.RSC_SPEC,
               rsc.MNG_UNIT,
               null,
               rid.ORDR_CD,
               null,
               null,
               rid.PRE_IST_CNT,
               rid.INSP_CNT,
               rid.INSP_PASS_CNT,
               rid.INSP_FAIL_CNT,
               rid.RSC_INSP_CD
        from RSC_INSP_DTL rid,
             RSC
        where rsc.RSC_CD = rid.RSC_CD
          and rid.RSC_INSP_CD = #{rscInspCd}
          and substr(ordr_cd, 1, 3) = 'NOR'
    </select>

    <select id="getRscInspInfoByCd" parameterType="RscInspVO" resultType="RscInspVO">
        select RSC_INSP_CD, INSP_DT, INSP_TSTR
        from RSC_INSP
        where RSC_INSP_CD = #{rscInspCd}
    </select>

    <select id="getRscInfHistByCd" parameterType="RscInspVO" resultType="RscInfVO">
        select distinct cd.CCD_DTL, ri.INF_CNT
        from CCDS_DTL cd
                 full join RSC_INFER ri on
            (cd.CCD_DTL = ri.CCD_DTL
                and RSC_CD = #{rscCd}
                and RSC_INSP_CD = #{rscInspCd}
                and ORDR_CD = #{ordrCd})
        where CCD = 'INF'
    </select>

    <update id="updRscInspHist" parameterType="RscInspVO">
        declare
            v_pre_ist_cnt number(35);
        begin
            update RSC_INSP_DTL
            set INSP_CNT      = #{inspCnt},
                INSP_PASS_CNT = #{inspPassCnt},
                INSP_FAIL_CNT = nvl(#{inspFailCnt}, 0),
                PRE_IST_CNT= #{preIstCnt},
                PASS_RMN_CNT  = #{inspPassCnt}
            where RSC_INSP_CD = #{rscInspCd}
              and ORDR_CD = #{ordrCd}
              and RSC_CD = #{rscCd};

            select PRE_IST_CNT
            into v_pre_ist_cnt
            from RSC_INSP_DTL
            where RSC_CD = #{rscCd}
              and RSC_INSP_CD = #{rscInspCd}
              and ORDR_CD = #{ordrCd};

            update RSC_ORDR_DTL
            set RMN_CNT = ORDR_CNT - v_pre_ist_cnt
            where ORDR_CD = #{ordrCd}
              and RSC_CD = #{rscCd};
        end;
    </update>

    <select id="getRscInspHist" parameterType="RscInspVO" resultType="RscInspVO">

        select rid.RSC_INSP_CD, ri.INSP_DT, rid.RSC_CD, rsc.RSC_NM, rsc.RSC_SPEC,
        rsc.MNG_UNIT,
        rid.INSP_CNT, rid.INSP_PASS_CNT, rid.INSP_FAIL_CNT, rsc.RSC_TYP, rid.ORDR_CD, rid.PASS_RMN_CNT
        from RSC_INSP ri, RSC_INSP_DTL rid, RSC_ORDR ro, RSC_ORDR_DTL rod, RSC rsc, VEND
        where rid.RSC_CD = rsc.RSC_CD
        and rid.RSC_INSP_CD = ri.RSC_INSP_CD
        and rod.rsc_cd = rid.rsc_cd
        and rid.ORDR_CD = rod.ORDR_CD
        and ro.ORDR_CD = rod.ORDR_CD
        and ro.VEND_CD = vend.VEND_CD
        <![CDATA[
          and ri.INSP_DT >= #{startDt}
          and ri.INSP_DT <= #{endDt}
        ]]>
        <if test="vendCd != '' and vendCd != null">and ro.VEND_CD = #{vendCd}</if>
        <if test="rscCd != '' and rscCd != null">and rid.RSC_CD = #{rscCd}</if>
        <if test="from == 'ist'">and rid.PASS_RMN_CNT != 0</if>

        union

        select rid.RSC_INSP_CD, ri.INSP_DT, rid.RSC_CD, RSC_NM, rsc.RSC_SPEC,
        rsc.MNG_UNIT,
        rid.INSP_CNT, rid.INSP_PASS_CNT, rid.INSP_FAIL_CNT, rsc.RSC_TYP, rid.ORDR_CD, rid.PASS_RMN_CNT
        from RSC_INSP ri, RSC_INSP_DTL rid, RSC rsc
        where ri.rsc_insp_cd = rid.rsc_insp_cd
        and rsc.rsc_cd = rid.rsc_cd
        and substr(rid.ordr_cd, 1, 3) = 'NOR'
        <![CDATA[
          and ri.INSP_DT >= #{startDt}
          and ri.INSP_DT <= #{endDt}
        ]]>
        <if test="rscCd != '' and rscCd != null">and rid.RSC_CD = #{rscCd}</if>
        <if test="from == 'ist'">and rid.PASS_RMN_CNT != 0</if>
    </select>

    <select id="getInfCdList" resultType="CcdsVO">
        SELECT *
        FROM CCDS_DTL
        WHERE CCD = 'INF'
        ORDER BY CCD_DTL
    </select>

    <delete id="delRscInspHistSingle" parameterType="RscInspVO">
        declare
            v_insp_cnt number(35);
        begin
            select INSP_CNT
            into v_insp_cnt
            from RSC_INSP_DTL
            where RSC_INSP_CD = #{rscInspCd}
              and ORDR_CD = #{ordrCd}
              and RSC_CD = #{rscCd};

            update RSC_ORDR_DTL
            set RMN_CNT = RMN_CNT + v_insp_cnt
            where RSC_CD = #{rscCd}
              and ORDR_CD = #{ordrCd};

            delete
            from RSC_INSP_DTL
            where RSC_INSP_CD = #{rscInspCd}
              and ORDR_CD = #{ordrCd}
              and RSC_CD = #{rscCd};

            delete
            from RSC_INFER
            where RSC_INSP_CD = #{rscInspCd}
              and ORDR_CD = #{ordrCd}
              and RSC_CD = #{rscCd};
        end;
    </delete>

    <delete id="delRscInspHist" parameterType="RscInspVO">
        delete
        from RSC_INSP
        where RSC_INSP_CD = #{rscInspCd}
    </delete>
</mapper>