<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.rezzo.mes.resour.insp.mapper.InspMapper">
    <select id="getVendors" parameterType="VendVO" resultType="VendVO">
        select VEND_CD, VEND_NM, BIZNO, TELNO
        from VEND
        where VEND_NM like '%${vendNm}%'
          and VEND_CD like '%${vendCd}%'
    </select>

    <select id="getResources" resultType="RscVO">
        select RSC_CD, RSC_NM
        from RSC
        where RSC_NM like '%${rscNm}%'
          and RSC_CD like '%${rscCd}%'
    </select>

    <select id="getRscOrdrList" parameterType="RscOrdrVO" resultType="RscOrdrVO">
        select rod.RSC_CD, rod.RSC_NM, rod.ORDR_CD, rod.ORDR_CNT
        from RSC_ORDR ro,
             RSC_ORDR_DTL rod
        where ro.ORDR_CD = rod.ORDR_CD
          and ro.VEND_CD = #{vendCd}
          and rod.INSP_BOOL != 1
          and
        <![CDATA[
            PAPRD_CMND_DT >= #{startDt}
          and PAPRD_CMND_DT <= #{endDt}
        ]]>
        order by PAPRD_CMND_DT
    </select>

    <select id="getRscInspCd" resultType="String">
        select 'RMI' || to_char(sysdate, 'YYYYMMDD') || lpad(NVL(max(rownum), 0) + 1, 3, '0')
        from rsc_insp
        where to_char(insp_dt, 'yyyymmdd') = to_char(sysdate, 'yyyymmdd')
    </select>

    <update id="setRscOrdrInspBool" parameterType="RscInspVO">
        update RSC_ORDR_DTL
        set INSP_BOOL = 1
        where #{ordrCd} = ORDR_CD
          and #{rscCd} = rsc_cd
    </update>

    <update id="setRscInspDtList" parameterType="RscInspVO">
        MERGE INTO RSC_INSP_DTL rid
        USING DUAL ON (rid.RSC_INSP_CD = #{rscInspCd} and rid.RSC_CD = #{rscCd} and rid.ORDR_CD = #{ordrCd})
        WHEN MATCHED THEN
            UPDATE
            SET rid.INSP_CNT = #{inspCnt}, rid.INSP_PASS_CNT = #{inspPassCnt}, rid.INSP_FAIL_CNT = #{inspFailCnt}, rid.ORDR_INST_CNT = #{ordrInstCnt}
        WHEN NOT MATCHED THEN
            insert (RSC_CD, RSC_INSP_CD, ORDR_CD, ORDR_INST_CNT, INSP_CNT, INSP_PASS_CNT, INSP_FAIL_CNT)
            values (#{rscCd}, #{rscInspCd}, #{ordrCd}, #{ordrInstCnt}, #{inspCnt}, #{inspPassCnt}, #{inspFailCnt})
    </update>

<!--    <select id="setRscInspDtList" parameterType="RscInspVO">-->
<!--        insert into RSC_INSP_DTL (RSC_CD, RSC_INSP_CD, ORDR_CD, ORDR_INST_CNT, INSP_CNT, INSP_PASS_CNT, INSP_FAIL_CNT)-->
<!--        values (#{rscCd}, #{rscInspCd}, #{ordrCd}, #{ordrInstCnt}, #{inspCnt}, #{inspPassCnt}, #{inspFailCnt})-->
<!--    </select>-->

    <insert id="setRscInspList" parameterType="RscInspVO">
        insert into RSC_INSP (RSC_INSP_CD, INSP_DT)
        values (#{rscInspCd}, to_char(#{inspDt}, 'YYYY-MM-DD'))
    </insert>

<!--    <insert id="setRscInfList" parameterType="RscInfVO">-->
<!--        insert into RSC_INFER (RSC_CD, RSC_INSP_CD, INF_CD, INF_CNT, ORDR_CD)-->
<!--        values (#{rscCd}, #{rscInspCd}, #{ccdDtl}, #{infCnt}, #{ordrCd})-->
<!--    </insert>-->

    <update id="setRscInfList" parameterType="RscInfVO">
        MERGE INTO RSC_INFER ri
        USING DUAL ON (ri.ORDR_CD = #{ordrCd} and ri.RSC_INSP_CD = #{rscInspCd} and ri.RSC_CD = #{rscCd} and ri.INF_CD = #{ccdDtl})
        WHEN MATCHED THEN
            UPDATE
            SET ri.INF_CNT = #{infCnt}
        WHEN NOT MATCHED THEN
            insert (RSC_CD, RSC_INSP_CD, INF_CD, INF_CNT, ORDR_CD)
            values (#{rscCd}, #{rscInspCd}, #{ccdDtl}, #{infCnt}, #{ordrCd})
    </update>

    <select id="getRscInspList" parameterType="RscOrdrVO" resultType="RscInspVO">
        select ri.RSC_INSP_CD, to_char(ri.INSP_DT, 'YYYY-MM-DD') as INSP_DT, rid.RSC_CD, rsc.RSC_NM, rid.INSP_CNT,
        rid.INSP_PASS_CNT, rid.INSP_FAIL_CNT
        from RSC_INSP ri,
        RSC_INSP_DTL rid,
        RSC_ORDR_DTL rod,
        RSC_ORDR ro,
        RSC
        where ri.RSC_INSP_CD = rid.RSC_INSP_CD
        and rod.ORDR_CD = rid.ORDR_CD
        and rod.RSC_CD = rid.RSC_CD
        and ro.ORDR_CD = rod.ORDR_CD
        and rsc.RSC_CD = rid.RSC_CD
        <![CDATA[
          and ri.INSP_DT >= #{startDt}
          and ri.INSP_DT <= #{endDt}
        ]]>
        <if test="vendCd != ''">and ro.VEND_CD = #{vendCd}</if>
        <if test="rscCd != ''">and rid.RSC_CD = #{rscCd}</if>
    </select>

    <select id="getRscInspListByDt" parameterType="RscOrdrVO" resultType="RscInspVO">
        select ri.INSP_DT, vend.VEND_NM, count(*) inspCnt, ri.RSC_INSP_CD
        from RSC_INSP ri,
             RSC_INSP_DTL rid,
             RSC_ORDR ro,
             VEND
        where ri.RSC_INSP_CD = rid.RSC_INSP_CD
          and rid.ORDR_CD = ro.ORDR_CD
          and ro.VEND_CD = vend.VEND_CD
          and <![CDATA[ ri.INSP_DT >= #{startDt}
          and ri.INSP_DT <= #{endDt}
        group by INSP_DT, ri.RSC_INSP_CD, VEND_NM
        ]]>
    </select>

    <select id="getRscInspHist" parameterType="RscInspVO" resultType="RscInspVO">
        select rid.RSC_CD,
               rod.RSC_NM,
               rid.ORDR_CD,
               rod.ORDR_CNT,
               rid.ORDR_INST_CNT,
               rid.INSP_CNT,
               rid.INSP_PASS_CNT,
               rid.INSP_FAIL_CNT
        from RSC_INSP_DTL rid,
             RSC_ORDR_DTL rod
        where rid.ORDR_CD = rod.ORDR_CD
          and rod.INSP_BOOL = 1
          and rid.RSC_CD = rod.RSC_CD
          and rid.RSC_INSP_CD = #{rscInspCd}
    </select>

    <select id="getRscInfHist" parameterType="RscInspVO" resultType="RscInfVO">
        select ri.RSC_CD, ri.INF_CD ccdDtl, ri.RSC_INSP_CD, ri.INF_CNT, ri.ORDR_CD, cd.CCD_DTL_NM
        from RSC_INFER ri,
             CCDS_DTL cd
        where RSC_INSP_CD = #{rscInspCd}
          and ORDR_CD = #{ordrCd}
          and RSC_CD = #{rscCd}
          and ri.INF_CD = cd.CCD_DTL
    </select>


</mapper>
