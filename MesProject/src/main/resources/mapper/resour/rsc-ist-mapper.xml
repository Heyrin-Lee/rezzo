<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.rezzo.mes.resour.ist.mapper.RscIstMapper">

    <select id="getRscIstLotCd" parameterType="RscIstVO" resultType="String">
        <if test="rscTyp == '원자재'">
            select 'RMR-L'||to_char(#{expDt}, 'YYYYMMDD')||lpad(NVL(max(substr(RSC_LOT_CD, 14, 3)), 0) + 1, 3, '0')
            from RSC_LOT where 'RMR' = substr(RSC_CD, 0, 3) and substr(RSC_LOT_CD, 6, 8) = to_char(#{expDt}, 'YYYYMMDD')
        </if>
        <if test="rscTyp == '부자재'">
            select 'SMR-L'||to_char(sysdate, 'YYYYMMDD')||lpad(NVL(max(substr(RSC_LOT_CD, 14, 3)), 0) + 1, 3, '0')
            from RSC_LOT where 'SMR' = substr(RSC_CD, 0, 3) and substr(RSC_LOT_CD, 6, 8) = to_char(sysdate, 'YYYYMMDD')
        </if>
    </select>

    <select id="getRscIstCd" resultType="String">
        select 'RIN' || to_char(sysdate, 'YYYYMMDD') || lpad(NVL(max(substr(rsc_ist_cd, 12, 3)), 0) + 1, 3, '0')
        from rsc_lot
        where substr(rsc_ist_cd, 4, 8) = to_char(sysdate, 'yyyymmdd')
    </select>

    <insert id="setRscIstLotEach" parameterType="RscIstVO">
        declare
            v_pass_rmn_cnt number(35);
        begin
            select PASS_RMN_CNT
            into v_pass_rmn_cnt
            from RSC_INSP_DTL
            where RSC_INSP_CD = #{rscInspCd}
              and ORDR_CD = #{ordrCd}
              and RSC_CD = #{rscCd};

            if #{lotCnt} > v_pass_rmn_cnt then
                raise_application_error(-90001, '재고부족');
            else
                insert into RSC_LOT (RSC_LOT_CD, ORDR_CD, RSC_INSP_CD, RSC_CD, LOT_CNT, LOT_RMN_CNT, RSC_IST_CD, EXP_DT)
                values (#{rscLotCd}, #{ordrCd}, #{rscInspCd}, #{rscCd}, #{lotCnt}, #{lotCnt}, #{rscIstCd}, #{expDt});

                update RSC_INSP_DTL
                set PASS_RMN_CNT = PASS_RMN_CNT - #{lotCnt}
                where RSC_CD = #{rscCd}
                  and RSC_INSP_CD = #{rscInspCd}
                  and ORDR_CD = #{ordrCd};
            end if;
        end;
    </insert>

    <insert id="setRscIst" parameterType="RscIstVO">
        declare
            v_values rsc_ist%rowtype;
        begin
            for v_values in (
                select rsc_cd, sum(lot_cnt) as ist_cnt
                from rsc_lot
                where rsc_ist_cd = #{rscIstCd}
                group by rsc_cd)

                loop
                    insert into RSC_IST (rsc_ist_cd, ist_dt, rsc_cd, ist_cnt)
                    values (#{rscIstCd}, #{istDt}, v_values.RSC_CD, v_values.IST_CNT);
                end loop;
        end;
    </insert>

    <select id="getRscIstHist" parameterType="RscIstVO" resultType="RscIstVO">
        select rl.rsc_lot_cd,
        rl.EXP_DT,
        rl.rsc_cd,
        rl.lot_cnt,
        rl.rsc_ist_cd,
        rl.ordr_cd,
        ri.ist_dt,
        vend.vend_nm,
        rsc.rsc_nm
        from rsc_lot rl,
        rsc_ist ri,
        rsc_ordr ro,
        vend,
        RSC
        where rl.rsc_ist_cd = ri.rsc_ist_cd
        and rl.rsc_cd = ri.rsc_cd
        and ro.ordr_cd = rl.ordr_cd
        and ro.vend_cd = vend.vend_cd
        and rl.rsc_cd = rsc.RSC_CD
        <![CDATA[
          and ri.IST_DT >= #{startDt}
          and ri.IST_DT <= #{endDt}
        ]]>
        <if test="vendCd != '' and vendCd != null">and ro.VEND_CD = #{vendCd}</if>
        <if test="rscCd != '' and rscCd != null">and ri.RSC_CD = #{rscCd}</if>
    </select>

    <select id="getRscSingle" parameterType="RscVO" resultType="RscVO">
        select rownum, rsc.*
        from RSC
        where (RSC_NM like '%${rscNm}%'
            and RSC_CD like '%${rscCd}%')
          and rownum = 1
    </select>

    <select id="getRscIstHistList" parameterType="RscIstVO" resultType="RscIstVO">
        select distinct ri.RSC_IST_CD, count(*) istCnt, ri.IST_DT
        from RSC_IST ri,
             RSC_LOT rl
        where ri.RSC_IST_CD = rl.RSC_IST_CD
          and ri.RSC_CD = rl.RSC_CD
        group by ri.RSC_IST_CD, ri.IST_DT
        order by ri.RSC_IST_CD desc
    </select>

    <select id="getRscIstHistMdfy" parameterType="RscIstVO" resultType="RscIstVO">
        select rsc.rsc_cd,
               rsc.RSC_NM,
               rsc.RSC_SPEC,
               rsc.MNG_UNIT,
               rsc.RSC_TYP,
               rl.ORDR_CD,
               rl.LOT_CNT,
               rl.RSC_LOT_CD,
               rl.EXP_DT,
               rl.RSC_INSP_CD,
               rl.RSC_IST_CD,
               rid.PASS_RMN_CNT,
               ri.IST_DT
        from RSC,
             RSC_ORDR_DTL rod,
             RSC_INSP_DTL rid,
             RSC_LOT rl,
             RSC_IST ri
        where rsc.RSC_CD = rl.RSC_CD
          and rod.ORDR_CD = rl.ORDR_CD
          and rsc.rsc_cd = rod.rsc_cd
          and ri.RSC_IST_CD = rl.RSC_IST_CD
          and rid.RSC_INSP_CD = rl.RSC_INSP_CD
          and rid.RSC_CD = rl.RSC_CD
          and rid.ORDR_CD = rl.ORDR_CD
          and ri.RSC_IST_CD = #{rscIstCd}

        union

        select rsc.rsc_cd,
               rsc.RSC_NM,
               rsc.RSC_SPEC,
               rsc.MNG_UNIT,
               rsc.RSC_TYP,
               rl.ORDR_CD,
               rl.LOT_CNT,
               rl.RSC_LOT_CD,
               rl.EXP_DT,
               rl.RSC_INSP_CD,
               rl.RSC_IST_CD,
               rid.PASS_RMN_CNT,
               ri.IST_DT
        from RSC,
             rsc_lot rl,
             RSC_INSP_DTL rid,
             RSC_IST ri
        where rsc.RSC_CD = rl.RSC_CD
          and ri.RSC_IST_CD = rl.RSC_IST_CD
          and substr(rl.ordr_cd, 1, 3) = 'NOR'
          and rl.RSC_INSP_CD = rid.RSC_INSP_CD
          and rl.RSC_CD = rid.RSC_CD
          and ri.RSC_IST_CD = #{rscIstCd}
    </select>

    <update id="updRscIstHist" parameterType="RscIstVO">
        declare
            v_pass_rmn_cnt number(35);
            v_lot_cnt      number(35);
        begin
            select PASS_RMN_CNT
            into v_pass_rmn_cnt
            from RSC_INSP_DTL
            where RSC_INSP_CD = #{rscInspCd}
              and RSC_CD = #{rscCd}
              and ORDR_CD = #{ordrCd};

            select LOT_CNT
            into v_lot_cnt
            from RSC_LOT
            where RSC_LOT_CD = #{rscLotCd};

            if #{lotCnt} > v_pass_rmn_cnt + v_lot_cnt then
                raise_application_error(-90001, '잔여재고부족');
            else
                update RSC_LOT
                set LOT_CNT     = LOT_CNT + (#{lotCnt} - v_lot_cnt),
                    LOT_RMN_CNT = LOT_RMN_CNT + (#{lotCnt} - v_lot_cnt),
                    EXP_DT      = #{expDt}
                where RSC_LOT_CD = #{rscLotCd};

                update RSC_IST
                set IST_CNT = IST_CNT + (#{lotCnt} - v_lot_cnt)
                where RSC_IST_CD = #{rscIstCd}
                  and RSC_CD = #{rscCd};

                update RSC_INSP_DTL
                set PASS_RMN_CNT = PASS_RMN_CNT + (v_lot_cnt - #{lotCnt})
                where RSC_INSP_CD = #{rscInspCd}
                  and RSC_CD = #{rscCd}
                  and ORDR_CD = #{ordrCd};
            end if;
        end;
    </update>
</mapper>